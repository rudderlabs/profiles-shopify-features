models:
  - name: rsSessionTable
    model_type: sql_template
    model_spec:
      validity_time: 24h # 1 day
      materialization:
        output_type: ephemeral
        run_type: discrete
      single_sql: |
        {% with SessionFeature = this.DeRef("models/shopify_session_features")%}
            select * from {{SessionFeature}}
        {% endwith %}
      ids:
        - select: "user_id"
          type: user_id
          entity: user
        - select: "anonymous_id"
          type: anonymous_id
          entity: user
      contract:
        is_optional: false
        is_event_stream: false
        with_entity_ids:
          - user
        with_columns:
          - name: user_id
          - name: anonymous_id
  - name: rsItemsPurchasedEverSku
    model_type: sql_template
    model_spec:
      validity_time: 24h # 1 day
      materialization:
        output_type: ephemeral
        run_type: discrete
      single_sql: |
        {% with OrderCreated = this.DeRef("inputs/rsOrderCreated") %}
        SELECT 
          value AS SKU,
          products,
          token,
          ANONYMOUS_ID,
          USER_ID,
          TIMESTAMP,
          order_number,
          cart_token
        FROM (
          SELECT 
            get_json_object(products, "$[0].sku") AS value,
            *
          FROM 
            {{OrderCreated}}
          where products is not null
        )
        {% endwith %}
      contract:
        is_optional: false
        is_event_stream: false
        with_entity_ids: []
        with_columns: []
  - name: rsItemsPurchasedEverCte
    model_type: sql_template
    model_spec:
      validity_time: 24h # 1 day
      materialization:
        output_type: ephemeral
        run_type: discrete
      single_sql: |
        {% with sku = this.DeRef("models/rsItemsPurchasedEverSku") %}
         SELECT * , row_number() OVER (PARTITION BY token ORDER BY timestamp DESC) AS rn
            FROM   {{sku}}
          {% endwith %}
      contract:
        is_optional: false
        is_event_stream: false
        with_entity_ids: []
        with_columns: []
  - name: rsItemsPurchasedEver
    model_type: sql_template
    model_spec:
      validity_time: 24h # 1 day
      materialization:
        output_type: ephemeral
        run_type: discrete
      single_sql: |
        {% with cte = this.DeRef("models/rsItemsPurchasedEverCte") %}

            SELECT *
            FROM   {{cte}}
            WHERE  rn = 1
            {% endwith %}
      ids:
        - select: "user_id"
          type: user_id
          entity: user
        - select: "anonymous_id"
          type: anonymous_id
          entity: user
      contract:
        is_optional: false
        is_event_stream: false
        with_entity_ids:
          - user
        with_columns:
          - name: user_id
          - name: anonymous_id
  - name: rsOrderCreatedOrderCancelled
    model_type: sql_template
    model_spec:
      validity_time: 24h # 1 day
      materialization:
        output_type: ephemeral
        run_type: discrete
      single_sql: |
        {% with OrderCreated = this.DeRef("inputs/rsOrderCreated") OrderCancelled = this.DeRef("inputs/rsOrderCancelled") OrderUpdated = this.DeRef("inputs/rsOrderUpdated") %}
         select
             a.ANONYMOUS_ID,
             a.user_id,
             a.total_price_usd,
             a.products,
             a.payment_details_credit_card_company,
             a.order_number,
             a.timestamp,
             a.cart_token,
             a.financial_status,
             b.anonymous_id as anonymous_id_order_cancelled,
             b.user_id as user_id_order_cancelled ,
             b.total_price_usd as total_price_usd_order_cancelled,
             b.order_number as order_number_order_cancelled,
             b.financial_status as financial_status_order_cancelled,
             b.cart_token as cart_token_order_cancelled,
             b.timestamp as timestamp_order_cancelled,
             b.products as products_order_cancelled,
             c.fulfillment_status
         from {{OrderCreated}} a
         left join {{OrderCancelled}} b on a.user_id = b.user_id and a.order_number = b.order_number
         left join {{OrderUpdated}} c on a.user_id = c.user_id and a.order_number = c.order_number
        {% endwith %}
      ids:
        - select: "user_id"
          type: user_id
          entity: user
        - select: "anonymous_id"
          type: anonymous_id
          entity: user
        - select: "cart_token"
          type: cart_token
          entity: user
      contract:
        is_optional: false
        is_event_stream: false
        with_entity_ids:
          - user
        with_columns:
          - name: user_id
          - name: anonymous_id
          - name: cart_token
  - name: rsCartLineItems
    model_type: sql_template
    model_spec:
      validity_time: 24h # 1 day
      materialization:
        output_type: ephemeral
        run_type: discrete
      single_sql: |
        {% with CartUpdate = this.DeRef("inputs/rsCartUpdate") %}
        SELECT value_brand AS brand,
        value_discounted_price::real AS discounted_price,
        value_gift_card AS gift_card,
        value_grams::real AS grams,
        value_id AS id,
        value_KEY AS KEY,
        value_line_price::real AS line_price,
        value_original_line_price::real AS original_line_price,
        value_original_price::real AS original_price,
        value_price::real AS price,
        value_product_id AS product_id,
        value_properties AS properties,
        value_quantity::real AS quantity,
        value_sku AS sku,
        value_taxable AS taxable,
        value_title AS title,
        value_total_discount::real AS total_discount,
        value_variant AS _VARIANT_,
            products,
            anonymous_id,timestamp, token
        FROM
        (SELECT *,
                get_json_object(products, "$[0].brand") AS value_brand,
                get_json_object(products, "$[0].discounted_price") AS value_discounted_price,
                get_json_object(products, "$[0].gift_card") AS value_gift_card,
                get_json_object(products, "$[0].grams") AS value_grams,
                get_json_object(products, "$[0].id") AS value_id,
                get_json_object(products, "$[0].key") AS value_KEY,
                get_json_object(products, "$[0].line_price") AS value_line_price,
                get_json_object(products, "$[0].original_line_price") AS value_original_line_price,
                get_json_object(products, "$[0].original_price") AS value_original_price,
                get_json_object(products, "$[0].price") AS value_price,
                get_json_object(products, "$[0].product_id") AS value_product_id,
                get_json_object(products, "$[0].properties") AS value_properties,
                get_json_object(products, "$[0].quantity") AS value_quantity,
                get_json_object(products, "$[0].sku") AS value_sku,
                get_json_object(products, "$[0].taxable") AS value_taxable,
                get_json_object(products, "$[0].title") AS value_title,
                get_json_object(products, "$[0].total_discount") AS value_total_discount,
                get_json_object(products, "$[0].variant") AS value_variant
        FROM
            (SELECT *,
                    row_number() over(PARTITION BY anonymous_id, token
                                                ORDER BY timestamp DESC) AS rn
            FROM {{CartUpdate}} where products is not null)
        WHERE rn = 1)
                {% endwith %}
      ids:
        - select: "anonymous_id"
          type: anonymous_id
          entity: user
      contract:
        is_optional: false
        is_event_stream: false
        with_entity_ids:
          - user
        with_columns:
          - name: anonymous_id
  - name: rsLastCartStatus
    model_type: sql_template
    model_spec:
      validity_time: 24h # 1 day
      materialization:
        output_type: ephemeral
        run_type: discrete
      single_sql: |
        {% with rsCartLineItems = this.DeRef("models/rsCartLineItems") OrderCreated = this.DeRef("inputs/rsOrderCreated") %}
          select cli.BRAND,
          cli.DISCOUNTED_PRICE,
          cli.GIFT_CARD,
          cli.GRAMS,
          cli.ID,
          cli.KEY,
          cli.LINE_PRICE,
          cli.ORIGINAL_LINE_PRICE,
          cli.ORIGINAL_PRICE,
          cli.PRICE,
          cli.PRODUCT_ID,
          cli.PROPERTIES,
          cli.QUANTITY,
          cli.SKU,
          cli.TAXABLE,
          cli.TITLE,
          cli.TOTAL_DISCOUNT,
          cli._VARIANT_,
          cli.PRODUCTS,
          cli.ANONYMOUS_ID,
          cli.TIMESTAMP,
          cli.TOKEN,
          oc.ANONYMOUS_ID as Order_Created_Anonymous_ID,
          oc.USER_ID,
          oc.TOTAL_PRICE_USD,
          oc.PRODUCTS as order_created_products,
          oc.PAYMENT_DETAILS_CREDIT_CARD_COMPANY,
          oc.ORDER_NUMBER,
          oc.TIMESTAMP as order_created_timestamp,
          oc.CART_TOKEN,
          oc.FULFILLMENT_STATUS,
          oc.FINANCIAL_STATUS
          from {{rsCartLineItems}} cli
          left outer join {{OrderCreated}} oc on cli.token = oc.cart_token
        {% endwith %}
      ids:
        - select: "user_id"
          type: user_id
          entity: user
        - select: "anonymous_id"
          type: anonymous_id
          entity: user
      contract:
        is_optional: false
        is_event_stream: false
        with_entity_ids:
          - user
        with_columns:
          - name: user_id
          - name: anonymous_id
