models:
  - name: rsSessionTable
    model_type: sql_template
    model_spec:
      validity_time: 24h # 1 day
      materialization:
        output_type: ephemeral
        run_type: discrete
      single_sql: |
        {% with SessionFeature = this.DeRef("models/shopify_session_features")%}
            select * from {{SessionFeature}}
        {% endwith %}
      ids:
        - select: "user_id"
          type: user_id
          entity: user
          to_default_stitcher: true
        - select: "anonymous_id"
          type: anonymous_id
          entity: user
          to_default_stitcher: true
      contract:
        is_optional: false
        is_event_stream: false
        with_entity_ids:
          - user
        with_columns:
          - name: user_id
          - name: anonymous_id
  - name: rsItemsPurchasedEverSku
    model_type: sql_template
    model_spec:
      validity_time: 24h # 1 day
      materialization:
        output_type: ephemeral
        run_type: discrete
      single_sql: |
        {% with OrderCreated = this.DeRef("inputs/rsOrderCreated") %}
          select null as SKU,products,token,ANONYMOUS_ID,USER_ID,"timestamp",order_number,cart_token
            from (select * from {{OrderCreated}} ) t
        {% endwith %}
      contract:
        is_optional: false
        is_event_stream: false
        with_entity_ids: []
        with_columns: []
  - name: rsItemsPurchasedEverCte
    model_type: sql_template
    model_spec:
      validity_time: 24h # 1 day
      materialization:
        output_type: ephemeral
        run_type: discrete
      single_sql: |
        {% with sku = this.DeRef("models/rsItemsPurchasedEverSku") %}
         SELECT * , row_number() OVER (PARTITION BY token ORDER BY "timestamp" DESC) AS rn
            FROM   {{sku}}
          {% endwith %}
      contract:
        is_optional: false
        is_event_stream: false
        with_entity_ids: []
        with_columns: []
  - name: rsItemsPurchasedEver
    model_type: sql_template
    model_spec:
      validity_time: 24h # 1 day
      materialization:
        output_type: ephemeral
        run_type: discrete
      single_sql: |
        {% with cte = this.DeRef("models/rsItemsPurchasedEverCte") %}

            SELECT *
            FROM   {{cte}}
            WHERE  rn = 1
            {% endwith %}
      ids:
        - select: "user_id"
          type: user_id
          entity: user
          to_default_stitcher: true
        - select: "anonymous_id"
          type: anonymous_id
          entity: user
          to_default_stitcher: true
      contract:
        is_optional: false
        is_event_stream: false
        with_entity_ids:
          - user
        with_columns:
          - name: user_id
          - name: anonymous_id
  - name: rsOrderCreatedOrderCancelled
    model_type: sql_template
    model_spec:
      validity_time: 24h # 1 day
      materialization:
        output_type: ephemeral
        run_type: discrete
      single_sql: |
        {% with OrderCreated = this.DeRef("inputs/rsOrderCreated") OrderCancelled = this.DeRef("inputs/rsOrderCancelled") OrderUpdated = this.DeRef("inputs/rsOrderUpdated") %}
         select
             a.ANONYMOUS_ID,
             a.user_id,
             a.total_price_usd,
             a.products,
             a.payment_details_credit_card_company,
             a.order_number,
             a.timestamp,
             a.cart_token,
             a.financial_status,
             b.anonymous_id as anonymous_id_order_cancelled,
             b.user_id as user_id_order_cancelled ,
             b.total_price_usd as total_price_usd_order_cancelled,
             b.order_number as order_number_order_cancelled,
             b.financial_status as financial_status_order_cancelled,
             b.cart_token as cart_token_order_cancelled,
             b.timestamp as timestamp_order_cancelled,
             b.products as products_order_cancelled,
             c.fulfillment_status
         from {{OrderCreated}} a
         left join {{OrderCancelled}} b on a.user_id = b.user_id and a.order_number = b.order_number
         left join {{OrderUpdated}} c on a.user_id = c.user_id and a.order_number = c.order_number
        {% endwith %}
      ids:
        - select: "user_id"
          type: user_id
          entity: user
          to_default_stitcher: true
        - select: "anonymous_id"
          type: anonymous_id
          entity: user
          to_default_stitcher: true
        - select: "cart_token"
          type: cart_token
          entity: user
          to_default_stitcher: true
      contract:
        is_optional: false
        is_event_stream: false
        with_entity_ids:
          - user
        with_columns:
          - name: user_id
          - name: anonymous_id
          - name: cart_token
  - name: rsCartLineItems
    model_type: sql_template
    model_spec:
      validity_time: 24h # 1 day
      materialization:
        output_type: ephemeral
        run_type: discrete
      single_sql: |
        {% with CartUpdate = this.DeRef("inputs/rsCartUpdate") %}
        SELECT null AS brand,
            null AS discounted_price,
            null AS gift_card,
            null AS grams,
            null AS id,
            null AS KEY,
            null AS line_price,
            null AS original_line_price,
            null AS original_price,
            null AS price,
            null AS product_id,
            null AS properties,
            null AS quantity,
            null AS sku,
            null AS taxable,
            null AS title,
            null AS total_discount,
            null AS _VARIANT_,
            products,
            anonymous_id,"timestamp", token
        FROM
        (SELECT *
        FROM
            (SELECT *,
                    row_number() over(PARTITION BY anonymous_id, token
                                                ORDER BY "timestamp" DESC) AS rn
            FROM {{CartUpdate}})
        WHERE rn = 1) t
                {% endwith %}
      ids:
        - select: "anonymous_id"
          type: anonymous_id
          entity: user
          to_default_stitcher: true
      contract:
        is_optional: false
        is_event_stream: false
        with_entity_ids:
          - user
        with_columns:
          - name: anonymous_id
  - name: rsLastCartStatus
    model_type: sql_template
    model_spec:
      validity_time: 24h # 1 day
      materialization:
        output_type: ephemeral
        run_type: discrete
      single_sql: |
        {% with rsCartLineItems = this.DeRef("models/rsCartLineItems") OrderCreated = this.DeRef("inputs/rsOrderCreated") %}
          select cli.BRAND,
          cli.DISCOUNTED_PRICE,
          cli.GIFT_CARD,
          cli.GRAMS,
          cli.ID,
          cli.KEY,
          cli.LINE_PRICE,
          cli.ORIGINAL_LINE_PRICE,
          cli.ORIGINAL_PRICE,
          cli.PRICE,
          cli.PRODUCT_ID,
          cli.PROPERTIES,
          cli.QUANTITY,
          cli.SKU,
          cli.TAXABLE,
          cli.TITLE,
          cli.TOTAL_DISCOUNT,
          cli._VARIANT_,
          cli.PRODUCTS,
          cli.ANONYMOUS_ID,
          cli.TIMESTAMP,
          cli.TOKEN,
          oc.ANONYMOUS_ID as Order_Created_Anonymous_ID,
          oc.USER_ID,
          oc.TOTAL_PRICE_USD,
          oc.PRODUCTS as order_created_products,
          oc.PAYMENT_DETAILS_CREDIT_CARD_COMPANY,
          oc.ORDER_NUMBER,
          oc.TIMESTAMP as order_created_timestamp,
          oc.CART_TOKEN,
          oc.FULFILLMENT_STATUS,
          oc.FINANCIAL_STATUS
          from {{rsCartLineItems}} cli
          left outer join {{OrderCreated}} oc on cli.token = oc.cart_token
        {% endwith %}
      ids:
        - select: "user_id"
          type: user_id
          entity: user
          to_default_stitcher: true
        - select: "anonymous_id"
          type: anonymous_id
          entity: user
          to_default_stitcher: true
      contract:
        is_optional: false
        is_event_stream: false
        with_entity_ids:
          - user
        with_columns:
          - name: user_id
          - name: anonymous_id
