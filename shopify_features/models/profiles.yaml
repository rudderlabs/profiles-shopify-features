
models:
  - name: shopify_user_id_stitcher
    model_type: id_stitcher
    model_spec:
      validity_time: 24h # 1 day
      entity_key: user
      main_id_type: main_id
      edge_sources:
        - from: inputs/rsIdentifies
        - from: inputs/rsTracks
        - from: inputs/rsPages
        - from: inputs/rsOrderCreated
        - from: inputs/rsOrderCancelled
        - from: inputs/rsCartUpdate
        - from: inputs/rsCartCreate
   
  - name: rsCartCreateUnionCartUpdate
    model_type: sql_template
    model_spec:
      validity_time: 24h # 1 day
      materialization:
        output_type: ephemeral
        run_type: discrete
      single_sql: |
        {% with CartCreate = this.DeRef("inputs/rsCartCreate") CartUpdate = this.DeRef("inputs/rsCartUpdate") %}
            select anonymous_id,timestamp,token from {{CartCreate}}
            union all 
            select anonymous_id,timestamp,token from {{CartUpdate}}
        {% endwith %}
      ids:
    
        - select: "anonymous_id"
          type: anonymous_id
          entity: user
    
  - name: rsTracksUnionPages
    model_type: sql_template
    model_spec:
      validity_time: 24h # 1 day
      materialization:
        output_type: ephemeral
        run_type: discrete
      single_sql: |
        {% with Tracks = this.DeRef("inputs/rsTracks") Pages = this.DeRef("inputs/rsPages") %}
            select user_id, anonymous_id, context_session_id, timestamp from (
            select ANONYMOUS_ID,USER_ID,timestamp::date as dt,CONTEXT_SESSION_ID,min(timestamp) as timestamp from {{Tracks}} group by user_id, anonymous_id, context_session_id, timestamp::date
            union all 
            select ANONYMOUS_ID,USER_ID,timestamp::date as dt,CONTEXT_SESSION_ID,max(timestamp) as timestamp from {{Tracks}} group by user_id, anonymous_id, context_session_id, timestamp::date) a
            union all
            select user_id, anonymous_id, context_session_id, timestamp from        
            (select ANONYMOUS_ID,USER_ID,timestamp::date as dt,CONTEXT_SESSION_ID,min(timestamp) as timestamp from {{Pages}} group by user_id, anonymous_id, context_session_id, timestamp::date
            union all 
            select ANONYMOUS_ID,USER_ID,timestamp::date as dt,CONTEXT_SESSION_ID,max(timestamp) as timestamp from {{Pages}} group by user_id, anonymous_id, context_session_id, timestamp::date) 
        {% endwith %}
      ids:
    
        - select: "anonymous_id"
          type: anonymous_id
          entity: user
        - select: "user_id"
          type: user_id
          entity: user
  - name: rsItemsPurchasedEver
    model_type: sql_template
    model_spec:
      validity_time: 24h # 1 day
      materialization:
        output_type: table
        run_type: discrete
      multi_sql: |
        {% with OrderCreated = this.DeRef("inputs/rsOrderCreated") %}
         create {{this.GetMaterialization().OutputType.ToSql()}} {{this.Name()}} as (
            with sku as (select t.value['sku'] as SKU,products,token,ANONYMOUS_ID,USER_ID,TIMESTAMP,order_number,cart_token
            from (select * from {{OrderCreated}} ), table(flatten(parse_json(products))) t where products is not null),

            cte AS (
            SELECT *
                    , row_number() OVER (PARTITION BY token ORDER BY timestamp DESC) AS rn
            FROM   sku
            )
            SELECT *
            FROM   cte
            WHERE  rn = 1);
            {% endwith %}
      ids:
    
       - select: "user_id"
         type: user_id
         entity: user
       - select: "anonymous_id"
         type: anonymous_id
         entity: user
     
  - name: rsOrderCreatedOrderCancelled
    model_type: sql_template
    model_spec:
      validity_time: 24h # 1 day
      materialization:
        output_type: table
        run_type: discrete
      multi_sql: |
        {% with OrderCreated = this.DeRef("inputs/rsOrderCreated") OrderCancelled = this.DeRef("inputs/rsOrderCancelled") %}
            create {{this.GetMaterialization().OutputType.ToSql()}} {{this.Name()}} as (
            with order_status as  
            (select 
            a.ANONYMOUS_ID,
            a.user_id,
            a.total_price_usd,
            a.products,
            a.payment_details_credit_card_company,
            a.order_number,
            a.timestamp,
            a.cart_token,
            a.fulfillment_status,
            a.financial_status,
            b.anonymous_id as anonymous_id_order_cancelled,
            b.user_id as user_id_order_cancelled ,
            b.total_price_usd as total_price_usd_order_cancelled,
            b.order_number as order_number_order_cancelled,
            b.financial_status as financial_status_order_cancelled,
            b.cart_token as cart_token_order_cancelled,
            b.timestamp as timestamp_order_cancelled,
            b.products as products_order_cancelled 
            from {{OrderCreated}} a left join {{OrderCancelled}} b 
            on a.user_id = b.user_id and a.order_number = b.order_number)
            select * from order_status);
               {% endwith %}
      ids:
    
        - select: "user_id"
          type: user_id
          entity: user
        - select: "anonymous_id"
          type: anonymous_id
          entity: user
        - select: "cart_token"
          type: cart_token
          entity: user
  - name: rsCartLineItems
    model_type: sql_template
    model_spec:
      validity_time: 24h # 1 day
      materialization:
        output_type: ephemeral
        run_type: discrete
      single_sql: |
        {% with CartUpdate = this.DeRef("inputs/rsCartUpdate") %}
        
        SELECT to_char(t.value['brand']) AS brand,
            t.value['discounted_price']::real AS discounted_price,
            to_char(t.value['gift_card']) AS gift_card,
            t.value['grams']::real AS grams,
            to_char(t.value['id']) AS id,
            to_char(t.value['key']) AS KEY,
            t.value['line_price']::real AS line_price,
            t.value['original_line_price']::real AS original_line_price,
            t.value['original_price']::real AS original_price,
            t.value['price']::real AS price,
            to_char(t.value['product_id']) AS product_id,
            to_char(t.value['properties']) AS properties,
            t.value['quantity']::real AS quantity,
            to_char(t.value['sku']) AS sku,
            to_char(t.value['taxable']) AS taxable,
            to_char(t.value['title']) AS title,
            t.value['total_discount']::real AS total_discount,
            to_char(t.value['variant']) AS _VARIANT_,
            products,
            anonymous_id,timestamp, token
        FROM
        (SELECT *
        FROM
            (SELECT *,
                    row_number() over(PARTITION BY anonymous_id, token
                                                ORDER BY timestamp DESC) AS rn
            FROM {{CartUpdate}} where products is not null)
        WHERE rn = 1), table(flatten(parse_json(products))) t
                {% endwith %}
      ids:
        - select: "anonymous_id"
          type: anonymous_id
          entity: user
       
  - name: rsLastCartStatus
    model_type: sql_template
    model_spec:
      validity_time: 24h # 1 day
      materialization:
        output_type: table
        run_type: discrete
      multi_sql: |
        {% with rsCartLineItems = this.DeRef("models/rsCartLineItems") OrderCreated = this.DeRef("inputs/rsOrderCreated") %}
         create {{this.GetMaterialization().OutputType.ToSql()}} {{this.Name()}} as (
          with cte as (
          select cli.BRAND,
          cli.DISCOUNTED_PRICE,
          cli.GIFT_CARD,
          cli.GRAMS,
          cli.ID,
          cli.KEY,
          cli.LINE_PRICE,
          cli.ORIGINAL_LINE_PRICE,
          cli.ORIGINAL_PRICE,
          cli.PRICE,
          cli.PRODUCT_ID,
          cli.PROPERTIES,
          cli.QUANTITY,
          cli.SKU,
          cli.TAXABLE,
          cli.TITLE,
          cli.TOTAL_DISCOUNT,
          cli._VARIANT_,
          cli.PRODUCTS,
          cli.ANONYMOUS_ID,
          cli.TIMESTAMP,
          cli.TOKEN,
          oc.ANONYMOUS_ID as Order_Created_Anonymous_ID,
          oc.USER_ID,
          oc.TOTAL_PRICE_USD,
          oc.PRODUCTS as order_created_products,
          oc.PAYMENT_DETAILS_CREDIT_CARD_COMPANY,
          oc.ORDER_NUMBER,
          oc.TIMESTAMP as order_created_timestamp,
          oc.CART_TOKEN,
          oc.FULFILLMENT_STATUS,
          oc.FINANCIAL_STATUS
          from {{rsCartLineItems}} cli
          left outer join {{OrderCreated}} oc on cli.token = oc.cart_token)
          Select * from cte);
        {% endwith %}
      ids:
    
       - select: "user_id"
         type: user_id
         entity: user
       - select: "anonymous_id"
         type: anonymous_id
         entity: user
      
   
# Remove the section below, if you don't want to generate a feature table
  - name: shopify_user_features
    model_type: feature_table_model
    model_spec:
      validity_time: 24h # 1 day
      entity_key: user
      vars:
        - entity_var:
            name: max_timestamp_tracks
            select: max(timestamp)
            from: inputs/rsTracks

        - entity_var:
            name: max_timestamp_pages
            select: max(timestamp)
            from: inputs/rsPages


        - entity_var:
            name: max_timestamp_bw_tracks_pages
            select: CASE WHEN max_timestamp_tracks>=max_timestamp_pages THEN max_timestamp_tracks ELSE max_timestamp_pages END
        #days since last seen
        - entity_var:
            name: days_since_last_seen
            select: datediff(day, date(max_timestamp_bw_tracks_pages),date('{{timestamp.Format("2006-01-02 15:04:05")}}'))
#       #Churn features
        - entity_var:
            name: is_churned_7_days
            select: case when days_since_last_seen > 7 then 1 else 0 end
        
        #days since last cart add
        - entity_var:
            name: max_timestamp_cart_update
            select: max(timestamp)
            from: inputs/rsCartUpdate
        
        - entity_var:
            name: max_timestamp_cart_create
            select: max(timestamp)
            from: inputs/rsCartCreate

        - entity_var:
            name: max_timestamp_bw_cart_create_update
            select: CASE WHEN max_timestamp_cart_update>=max_timestamp_cart_create THEN max_timestamp_cart_update ELSE max_timestamp_cart_create end
       
        - entity_var:
            name: days_since_last_cart_add
            select: datediff(day, date(max_timestamp_bw_cart_create_update), date('{{timestamp.Format("2006-01-02 15:04:05")}}'))
       
        #total refund
        - entity_var:
            name: total_refund
            select: sum(total_price_usd ::real)
            from: inputs/rsOrderCancelled
            where: financial_status in ('paid','refunded','partially_refunded')

        #refund count
        - entity_var:
            name: refund_count
            select: count(*)
            from: inputs/rsOrderCancelled
            where: financial_status in ('paid','refunded','partially_refunded')

    #days since last purchase
        
        - entity_var:
            name: max_timestamp_order_created
            select: max(timestamp)
            from: inputs/rsOrderCreated
        
        - entity_var:
            name: days_since_last_purchase
            select: datediff(day, date(max_timestamp_order_created), date('{{timestamp.Format("2006-01-02 15:04:05")}}'))
    #days since first purchase

        - entity_var:
            name: min_timestamp_order_created
            select: min(timestamp)
            from: inputs/rsOrderCreated

        - entity_var:
            name: days_since_first_purchase
            select: datediff(day, date(min_timestamp_order_created), date('{{timestamp.Format("2006-01-02 15:04:05")}}'))

    #has credit card
        - entity_var:
            name: has_credit_card
            select: max(case when lower(payment_details_credit_card_company) in ('visa','american express','mastercard') then 1 else 0 end)
            from: inputs/rsOrderCreated

    #avg_units_per_transaction
        - entity_var:
            name: avg_units_per_transaction
            select: avg({{ array_size ( 'products' )}}::real)
            from: inputs/rsOrderCreated

    #avg_transaction_value
        - entity_var:
            name: avg_transaction_value
            select: avg( total_price_usd ::real)
            from: inputs/rsOrderCreated

    #highest_transaction_value
        - entity_var:
            name: highest_transaction_value
            select: max(total_price_usd ::real)
            from: inputs/rsOrderCreated

    #median_transaction_value   
        - entity_var:
            name: median_transaction_value
            select: median( total_price_usd ::real)
            from: inputs/rsOrderCreated

    #total_transactions
        - entity_var:
            name: total_transactions
            select: count(*)
            from: inputs/rsOrderCreated

    #total_refund_in_past_1_days
        - entity_var:
            name: total_refund_in_past_1_days
            select: sum(total_price_usd::real)
            from: inputs/rsOrderCancelled
            where: datediff(day,date(timestamp),date('{{timestamp.Format("2006-01-02 15:04:05")}}'))<=1 and financial_status in ('paid','refunded','partially_refunded')
    #total_refund_in_past_7_days
        - entity_var:
            name: total_refund_in_past_7_days
            select: sum(total_price_usd::real)
            from: inputs/rsOrderCancelled
            where: datediff(day,date(timestamp),date('{{timestamp.Format("2006-01-02 15:04:05")}}'))<=7  and financial_status in ('paid','refunded','partially_refunded')
        
       
        
        - entity_var:
            name: days_since_account_creation
            select: datediff(days,date(min(timestamp)),date('{{timestamp.Format("2006-01-02 15:04:05")}}'))

            from: inputs/rsIdentifies

        - entity_var:
            name: has_mobile_app
            select: max(case when lower(context_device_type) in ('android', 'ios') then 1 else 0 end)
            from: inputs/rsIdentifies

        - entity_var:
            name: state
            from: inputs/rsIdentifies
            select: first_value(state)
            window:
              order_by: 
              - timestamp desc
            where: state is not null and state!=''

        - entity_var:
            name: country
            from: inputs/rsIdentifies
            select: first_value(address_country)
            window:
              order_by: 
              - timestamp desc
            where: address_country is not null and address_country!=''


        - entity_var:
            name: first_name
            from: inputs/rsIdentifies
            select: first_value(first_name)
            window:
              order_by: 
              - timestamp desc
            where: first_name is not null and first_name!=''
        - entity_var:
            name: last_name
            from: inputs/rsIdentifies
            select: first_value(last_name)
            window:
              order_by: 
              - timestamp desc
            where: last_name is not null and last_name!=''
        - entity_var:
            name: currency
            from: inputs/rsIdentifies
            select: first_value(currency)
            window:
              order_by: 
              - timestamp desc
            where: currency is not null and currency!=''

        - entity_var:
            name: device_name
            from: inputs/rsIdentifies
            select: first_value(context_device_name)
            window:
              order_by: 
              - timestamp desc
            where: context_device_name is not null and context_device_name!=''
        - entity_var:
            name: device_type
            from: inputs/rsIdentifies
            select: first_value(context_device_type)
            window:
              order_by: 
              - timestamp desc
            where: context_device_type is not null and context_device_type!=''
        
        - entity_var:
            name: campaign_sources
            select: array_agg( context_campaign_source )
            from: inputs/rsIdentifies
       
        - entity_var:
            name: is_active_on_website
            select: max(case when lower(context_device_type) like '%pc' then 1 else 0 end)
            from: inputs/rsIdentifies

        - entity_var:
            name: device_manufacturer
            from: inputs/rsIdentifies
            select: first_value(context_device_manufacturer)
            window:
              order_by: 
              - timestamp desc
            where: context_device_manufacturer is not null and context_device_manufacturer!='' 
        
        - entity_var:
            name: active_days_in_past_7_days
            select: count(distinct date(timestamp))
            from: models/rsTracksUnionPages
            where:  datediff(day,date(timestamp),date('{{timestamp.Format("2006-01-02 15:04:05")}}')) <= 7 
        
        - entity_var:
            name: active_days_in_past_365_days
            select: count(distinct date(timestamp))
            from: models/rsTracksUnionPages
            where:  datediff(day,date(timestamp),date('{{timestamp.Format("2006-01-02 15:04:05")}}')) <= 365 
        - input_var:
            name: session_start_time
            from: models/rsTracksUnionPages
            select: min(timestamp)
            window:
               partition_by:
                  - context_session_id
                  - main_id
        - input_var:
            name: session_end_time
            from: models/rsTracksUnionPages
            select: max(timestamp)
            window:
               partition_by:
                  - context_session_id
                  - main_id
        - input_var:
            name: session_row_number
            from: models/rsTracksUnionPages
            select: row_number()
            window:
                partition_by: 
                   - context_session_id
                   - main_id
                order_by:
                   - timestamp desc
        - entity_var:
            name: total_sessions_till_date
            from: models/rsTracksUnionPages
            select: count(distinct context_session_id)
            where: context_session_id is not null

        - entity_var:
            name: total_sessions_last_week
            from: models/rsTracksUnionPages
            select: count(distinct context_session_id)
            where: context_session_id is not null and datediff(day, date(session_start_time), date('{{timestamp.Format("2006-01-02 15:04:05")}}')) between 0 and 7
        - entity_var:
            name: total_sessions_90_days
            from: models/rsTracksUnionPages
            select: count(distinct context_session_id)
            where: context_session_id is not null and datediff(day, date(session_start_time), date('{{timestamp.Format("2006-01-02 15:04:05")}}')) between 0 and 90
        - entity_var:
            name: total_sessions_365_days
            from: models/rsTracksUnionPages
            select: count(distinct context_session_id)
            where: context_session_id is not null and datediff(day, date(session_start_time), date('{{timestamp.Format("2006-01-02 15:04:05")}}')) between 0 and 365

        - entity_var:
            name: avg_session_length_in_sec_overall
            from: models/rsTracksUnionPages
            select: avg(datediff(second, session_start_time, session_end_time))
            where: session_row_number = 1 and context_session_id is not null


        - entity_var:
            name: avg_session_length_in_sec_last_week
            from: models/rsTracksUnionPages
            select: avg(datediff(second, session_start_time, session_end_time))
            where: context_session_id is not null and session_row_number = 1 and datediff(day, date(session_start_time), date('{{timestamp.Format("2006-01-02 15:04:05")}}')) between 0 and 7
        - entity_var:
            name: avg_session_length_in_sec_365_days
            from: models/rsTracksUnionPages
            select: avg(datediff(second, session_start_time, session_end_time))
            where: context_session_id is not null and session_row_number = 1 and datediff(day, date(session_start_time), date('{{timestamp.Format("2006-01-02 15:04:05")}}'))<=365

        - entity_var:
            name: first_seen_date
            from: models/rsTracksUnionPages
            select: min(date(session_start_time))
        - entity_var:
            name: last_seen_date
            from: models/rsTracksUnionPages
            select: max(date(session_end_time))
        - entity_var:
            name: carts_in_past_1_days
            select: count(distinct token)
            from: models/rsCartCreateUnionCartUpdate
            where:  datediff(day,date(timestamp),date('{{timestamp.Format("2006-01-02 15:04:05")}}')) <= 1 
        - entity_var:
            name: carts_in_past_7_days
            select: count(distinct token)
            from: models/rsCartCreateUnionCartUpdate
            where:  datediff(day,date(timestamp),date('{{timestamp.Format("2006-01-02 15:04:05")}}')) <= 7 
        - entity_var:
            name: carts_in_past_365_days
            select: count(distinct token)
            from: models/rsCartCreateUnionCartUpdate
            where:  datediff(day,date(timestamp),date('{{timestamp.Format("2006-01-02 15:04:05")}}')) <= 365 
        - entity_var:
            name: total_carts
            select: count(distinct token)
            from: models/rsCartCreateUnionCartUpdate

        
        - entity_var:
            name: last_transaction_value
            from: inputs/rsOrderCreated
            select: first_value(total_price_usd)
            window:
              order_by: 
              - case when TOTAL_PRICE_USD is not null then 2 else 1 end desc
              - timestamp desc

        
        - entity_var:
            name: total_products_added
            select: array_agg(distinct product_id)
            from: models/rsCartLineItems

        - entity_var:
            name: products_added_in_past_1_days
            select: array_agg(distinct product_id)
            from: models/rsCartLineItems
            where: datediff(day, date(timestamp), date('{{timestamp.Format("2006-01-02 15:04:05")}}')) <= 1
        - entity_var:
            name: products_added_in_past_7_days
            select: array_agg(distinct product_id)
            from: models/rsCartLineItems
            where: datediff(day, date(timestamp), date('{{timestamp.Format("2006-01-02 15:04:05")}}')) <= 7
        - entity_var:
            name: products_added_in_past_365_days
            select: array_agg(distinct product_id)
            from: models/rsCartLineItems
            where: datediff(day, date(timestamp), date('{{timestamp.Format("2006-01-02 15:04:05")}}')) <= 365
        - entity_var:
            name: latest_cart_id
            from: models/rsCartLineItems
            select: first_value(token)
            window:
              order_by: 
              - timestamp desc

        - entity_var:
            name: last_cart_value_in_dollars
            select: sum(line_price)
            from: models/rsCartLineItems
            where: token=latest_cart_id
        - entity_var:
            name: last_cart_status
            select: min(coalesce(fulfillment_status, financial_status, 'abandoned'))
            from: models/rsOrderCreatedOrderCancelled
        - entity_var:
            name: transactions_in_past_1_days
            select: count(*)::real
            from: models/rsOrderCreatedOrderCancelled
            where: datediff(day,date(timestamp),date('{{timestamp.Format("2006-01-02 15:04:05")}}'))<=1

        - entity_var:
            name: transactions_in_past_90_days
            select: count(*)::real
            from: models/rsOrderCreatedOrderCancelled
            where: datediff(day,date(timestamp),date('{{timestamp.Format("2006-01-02 15:04:05")}}'))<=90

        - entity_var:
            name: transactions_in_past_365_days
            select: count(*)::real
            from: models/rsOrderCreatedOrderCancelled
            where: datediff(day,date(timestamp),date('{{timestamp.Format("2006-01-02 15:04:05")}}'))<=365
        - entity_var:
            name: net_amt_spent_in_past_90_days
            select: sum(total_price_usd::real) - coalesce(sum(total_price_usd_order_cancelled::real), 0)
            from: models/rsOrderCreatedOrderCancelled
            where: datediff(day,date(timestamp),date('{{timestamp.Format("2006-01-02 15:04:05")}}'))<=90

        - entity_var:
            name: net_amt_spent_in_past_365_days
            select: sum(total_price_usd::real) - coalesce(sum(total_price_usd_order_cancelled::real), 0)
            from: models/rsOrderCreatedOrderCancelled
            where: datediff(day,date(timestamp),date('{{timestamp.Format("2006-01-02 15:04:05")}}'))<=365

        - entity_var:
            name: net_amt_spent_in_past_1_days
            select: sum(total_price_usd::real) - coalesce(sum(total_price_usd_order_cancelled::real), 0)
            from: models/rsOrderCreatedOrderCancelled
            where: datediff(day,date(timestamp),date('{{timestamp.Format("2006-01-02 15:04:05")}}'))<=1
        - entity_var:
            name: net_amt_spent_in_past
            select: sum(total_price_usd::real) - coalesce(sum(total_price_usd_order_cancelled::real), 0)
            from: models/rsOrderCreatedOrderCancelled
        - entity_var:
            name: gross_amt_spent_in_past
            select: sum(total_price_usd::real)
            from: models/rsOrderCreatedOrderCancelled
        - entity_var:
            name: items_purchased_ever
            select: array_agg(sku)
            from: models/rsItemsPurchasedEver
    




      features:
        - days_since_last_seen
        - is_churned_7_days
        - days_since_last_cart_add
        - total_refund
        - refund_count
        - days_since_last_purchase
        - days_since_first_purchase
        - has_credit_card
        - avg_units_per_transaction
        - avg_transaction_value
        - highest_transaction_value
        - median_transaction_value
        - total_transactions
        - total_refund_in_past_1_days
        - total_refund_in_past_7_days
        - days_since_account_creation
        - has_mobile_app
        - state
        - country
        - first_name
        - last_name
        - currency
        - device_type
        - device_name
        - campaign_sources
        - is_active_on_website
        - device_manufacturer
        - active_days_in_past_7_days
        - active_days_in_past_365_days
        - total_sessions_till_date
        - total_sessions_last_week
        - avg_session_length_in_sec_overall
        - avg_session_length_in_sec_last_week
        - avg_session_length_in_sec_365_days
        - first_seen_date
        - last_seen_date
        - carts_in_past_1_days
        - carts_in_past_7_days
        - carts_in_past_365_days
        - total_carts
        - last_transaction_value
        - total_products_added
        - products_added_in_past_1_days
        - products_added_in_past_7_days
        - products_added_in_past_365_days
        - total_sessions_90_days
        - total_sessions_365_days
        - last_cart_status
        - last_cart_value_in_dollars
        - transactions_in_past_1_days
        - transactions_in_past_90_days
        - transactions_in_past_365_days
        - net_amt_spent_in_past_1_days
        - net_amt_spent_in_past_90_days
        - net_amt_spent_in_past_365_days
        - net_amt_spent_in_past
        - gross_amt_spent_in_past
        - items_purchased_ever

